import 'dotenv/config';
import { createWalletClient, createPublicClient, http, parseAbi } from 'viem';
import { privateKeyToAccount } from 'viem/accounts';
import { baseSepolia } from 'viem/chains';

async function main() {
  const account = privateKeyToAccount(process.env.BASE_RELAYER_PK as `0x${string}`);
  const client = createWalletClient({
    account,
    chain: baseSepolia,
    transport: http(process.env.BASE_RPC_URL)
  });

  const publicClient = createPublicClient({
    chain: baseSepolia,
    transport: http(process.env.BASE_RPC_URL)
  });

  console.log('Deploying BaseDepositEscrow on Base Sepolia...');
  console.log('Deployer:', account.address);
  console.log('USDC Base:', process.env.USDC_BASE);
  console.log('Vault Base:', process.env.VAULT_BASE);

  // Deploy BaseDepositEscrow
  const hash = await client.deployContract({
    abi: parseAbi([
      'constructor(address usdc, address vault)'
    ]),
    bytecode: '0x60c060405234801561000f575f80fd5b506040516104a43803806104a483398101604081905261002e91610060565b6001600160a01b039182166080521660a052610091565b80516001600160a01b038116811461005b575f80fd5b919050565b5f8060408385031215610071575f80fd5b61007a83610045565b915061008860208401610045565b90509250929050565b60805160a0516103e86100bc5f395f81816048015260e901525f8181608b015260c701526103e85ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063411557d11461004357806389a3027114610086578063caef06fa146100ad575b5f80fd5b61006a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61006a7f000000000000000000000000000000000000000000000000000000000000000081565b6100c06100bb366004610315565b6100c2565b005b61010e7f0000000000000000000000000000000000000000000000000000000000000000867f0000000000000000000000000000000000000000000000000000000000000000876101b9565b604080516001600160a01b0387166020820152908101859052606081018490526080810183905260a081018290524660c08201523060e08201525f906101000160408051601f19818403018152828252805160209182012088845290830187905290820185905291506001600160a01b0387169082907f208370bbfa2bbf1f60e06ac050c2adf73b66ec984568dea18f4082da33f399da9060600160405180910390a3505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b179052915190915f91829188169061021e908590610360565b5f604051808303815f865af19150503d805f8114610257576040519150601f19603f3d011682016040523d82523d5f602084013e61025c565b606091505b5091509150816102a55760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064015b60405180910390fd5b80511561030c57808060200190518101906102c0919061038c565b61030c5760405162461bcd60e51b815260206004820152601760248201527f5472616e736665722072657475726e65642066616c7365000000000000000000604482015260640161029c565b50505050505050565b5f805f805f60a08688031215610329575f80fd5b85356001600160a01b038116811461033f575f80fd5b97602087013597506040870135966060810135965060800135945092505050565b5f82515f5b8181101561037f5760208186018101518583015201610365565b505f920191825250919050565b5f6020828403121561039c575f80fd5b815180151581146103ab575f80fd5b939250505056fea2646970667358221220ddbea0ec1bb0dbee5b9e863a4d47adc348a735eca55b332c840f86543fe0f76f64736f6c63430008180033' as `0x${string}`,
    args: [
      process.env.USDC_BASE as `0x${string}`,
      process.env.VAULT_BASE as `0x${string}`
    ]
  });

  console.log('Deployment transaction:', hash);
  
  // Wait for transaction receipt to get contract address
  const receipt = await publicClient.waitForTransactionReceipt({ hash });
  console.log('BaseDepositEscrow deployed at:', receipt.contractAddress);
  console.log('Update your .env with: BASE_DEPOSIT_ESCROW=' + receipt.contractAddress);
}

main().catch(console.error);
