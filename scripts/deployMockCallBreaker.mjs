import 'dotenv/config';
import { createWalletClient, createPublicClient, http, parseAbi } from 'viem';
import { privateKeyToAccount } from 'viem/accounts';
import { arbitrumSepolia } from 'viem/chains';

async function main() {
  const account = privateKeyToAccount(process.env.ARB_RELAYER_PK);
  const client = createWalletClient({
    account,
    chain: arbitrumSepolia,
    transport: http(process.env.ARB_RPC_URL)
  });

  const publicClient = createPublicClient({
    chain: arbitrumSepolia,
    transport: http(process.env.ARB_RPC_URL)
  });

  console.log('Deploying MockCallBreaker on Arbitrum Sepolia...');
  console.log('Deployer:', account.address);

  // Deploy MockCallBreaker
  const hash = await client.deployContract({
    abi: parseAbi([
      'constructor()'
    ]),
    bytecode: '0x608060405234801561000f575f80fd5b50610ca58061001d5f395ff3fe608060405260043610610 3e575f3560e01c8063110720ca1461004257806338f2a30014610077578063d0e30db0146100b0578063d7a0fec7146100ba575b5f80fd5b34801561004d575f80fd5b5061006161005c366004610501565b6100cd565b60405161006e91906105f1565b60405180910390f35b348015610082575f80fd5b506100a261009136600461060a565b5f6020819052908152604090205481565b60405190815260200161006e565b6100b861037e565b005b6100a26100c8366004610623565b6103a3565b60606100dc60e08401846106b5565b905067ffffffffffffffff8111156100f6576100f6610702565b60405190808252806020026020018201604052801561012957816020015b60608152602001906001900390816101145790505b5090505f5b61013b60e08501856106b5565b90508110156101ce575f61015260e08601866106b5565b8381811061016257610162610716565b9050602002810190610174919061072a565b61017d9061091e565b9050806101000151156101c55760408051629896806020820152016040516020818303038152906040528383815181106101b9576101b9610716565b60200260200101819052505b5060010161012e565b506001600160a01b03821615610378576040805160018082528183019092525f91816020015b61023f604051806101000160405280606081526020015f81526020015f81526020015f81526020015f81526020015f81526020015f6001600160a01b03168152602001606081525090565b8152602001906001900390816101f457905050905061025d846109c3565b815f8151811061026f5761026f610716565b60200260200101819052505f80846001600160a01b03168385604051602401610299929190610b42565b60408051601f198184030181529181526020820180516001600160e01b0316635f3b5a0160e11b179052516102ce9190610c24565b5f604051808303815f865af19150503d805f8114610307576040519150601f19603f3d011682016040523d82523d5f602084013e61030c565b606091505b509150915081801561032d57508080602001905181019061032d9190610c35565b6103745760405162461bcd60e51b8152602060048201526013602482015272141bdcdd08185c1c1c9bdd994819985a5b1959606a1b60448201526064015b60405180910390fd5b5050505b92915050565b335f908152602081905260408120805434929061039c908490610c50565b9091555050565b5f336103b560e0860160c0870161060a565b6001600160a01b0316146103fc5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21039b2b73232b960911b604482015260640161036b565b335f9081526020819052604090205461044c5760405162461bcd60e51b81526020600482015260126024820152714e6f2062616c616e636520666f722067617360701b604482015260640161036b565b61045c60e0850160c0860161060a565b604080516001600160a01b039092166020838101919091528601359082015242606082015260800160408051601f198184030181529082905280516020909101209150819033907ff10f647eebb09a3fe3b2530a39e2106310bfb076cabecce0c0abea0129795cbd905f90a39392505050565b5f61010082840312156104e0575f80fd5b50919050565b80356001600160a01b03811681146104fc575f80fd5b919050565b5f8060408385031215610512575f80fd5b823567ffffffffffffffff811115610528575f80fd5b610534858286016104cf565b925050610543602084016104e6565b90509250929050565b5f5b8381101561056657818101518382015260200161054e565b50505f910152565b5f815180845261058581602086016020860161054c565b601f01601f19169290920160200192915050565b5f8282518085526020808601955060208260051b840101602086015f5b848110156105e457601f198684030189526105d283835161056e565b988401989250908301906001016105b6565b5090979650505050505050565b602081525f6106036020830184610599565b9392505050565b5f6020828403121561061a575f80fd5b610603826104e6565b5f805f60408486031215610635575f80fd5b833567ffffffffffffffff8082111561064c575f80fd5b610658878388016104cf565b9450602086013591508082111561066d575f80fd5b818601915086601f830112610680575f80fd5b81358181111561068e575f80fd5b8760208260051b85010111156106a2575f80fd5b6020830194508093505050509250925092565b5f808335601e198436030181126106ca575f80fd5b83018035915067ffffffffffffffff8211156106e4575f80fd5b6020019150600581901b36038213156106fb575f80fd5b9250929050565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f823561011e1983360301811261073f575f80fd5b9190910192915050565b604051610120810167ffffffffffffffff8111828210171561076d5761076d610702565b60405290565b604051610100810167ffffffffffffffff8111828210171561076d5761076d610702565b604051601f8201601f1916810167ffffffffffffffff811182821017156107c0576107c0610702565b604052919050565b5f82601f8301126107d7575f80fd5b813567ffffffffffffffff8111156107f1576107f1610702565b610804601f8201601f1916602001610797565b818152846020838601011115610818575f80fd5b816020850160208301375f918101602001919091529392505050565b8015158114610841575f80fd5b50565b80356104fc81610834565b5f6101208284031215610860575f80fd5b610868610749565b905081358152602082013560208201526040820135604082015261088e606083016104e6565b6060820152608082013567ffffffffffffffff808211156108ad575f80fd5b6108b9858386016107c8565b608084015260a08401359150808211156108d1575f80fd5b506108de848285016107c8565b60a0830152506108f060c08301610844565b60c082015261090160e08301610844565b60e0820152610100610914818401610844565b9082015292915050565b5f610378368361084f565b5f82601f830112610938575f80fd5b8135602067ffffffffffffffff8083111561095557610955610702565b8260051b610964838201610797565b938452858101830193838101908886111561097d575f80fd5b84880192505b858310156109b757823584811115610999575f80fd5b6109a78a87838c010161084f565b8352509184019190840190610983565b98975050505050505050565b5f61010082360312156109d4575f80fd5b6109dc610773565b823567ffffffffffffffff808211156109f3575f80fd5b6109ff368387016107c8565b83526020850135602084015260408501356040840152606085013560608401526080850135608084015260a085013560a0840152610a3f60c086016104e6565b60c084015260e0850135915080821115610a57575f80fd5b50610a6436828601610929565b60e08301525092915050565b5f82825180855260208086019550808260051b8401018186015f5b848110156105e457601f198684030189528151805184528481015185850152604080820151908501526060808201516001600160a01b0316908501526080808201516101208287018190529190610ae48388018261056e565b9250505060a08083015186830382880152610aff838261056e565b9250505060c080830151610b168288018215159052565b505060e08281015115159086015261010091820151151591909401529783019790830190600101610a8b565b5f6040808301604084528086518083526060925060608601915060608160051b8701016020808a015f5b84811015610c0457605f198a850301865281516101008151818752610b938288018261056e565b83870151888801528b8401518c8901528a8401518b8901526080808501519089015260a0808501519089015260c0808501516001600160a01b03169089015260e093840151888203948901949094529150610bf090508183610a70565b978501979550505090820190600101610b6c565b505087820390880152610c178189610599565b9998505050505050505050565b5f825161073f81846020870161054c565b5f60208284031215610c45575f80fd5b815161060381610834565b8082018082111561037857634e487b7160e01b5f52601160045260245ffdfea26469706673582212208f3b3577534a780af12ca618938a70b8f4023443e701baf7ace6ec4edfae344664736f6c63430008180033'.replace(/ /g, ''),
    args: []
  });

  console.log('Deployment transaction:', hash);
  
  // Wait for transaction receipt to get contract address
  const receipt = await publicClient.waitForTransactionReceipt({ hash });
  console.log('MockCallBreaker deployed at:', receipt.contractAddress);
  console.log('Update your .env with: CALLBREAKER_ARB=' + receipt.contractAddress);
}

main().catch(console.error);
